##Read in the dataset

#setwd("C:/Users/mkhalid/Desktop")

dat1 = read.csv("GSE92943_normalized_FPKM_matrix.csv")

##Explore the dataset

head(dat1)

##Histograms

hist(dat1$Control_rep1)
hist(dat1$Control_rep1, xlim = c(1,100))
hist(dat1$Control_rep1, xlim = c(1,100), breaks = 1000)
hist(dat1$Control_rep1, xlim = c(1,100), breaks = 1000, col="blue", main = "Histogram of Control, Replicate 1", xlab = "Control Replicate 1")
hist(dat1$RBP2_rep1, xlim = c(1,100), breaks = 1000, col="red", main = "Histogram of RBP2, Replicate 1", xlab = "RBP2 Replicate 1")




## XY scatterplots

plot(dat1$Control_rep1, dat1$Control_rep2)
plot(log(dat1$Control_rep1, 10), log(dat1$Control_rep2,10))
plot(log(dat1$Control_rep1, 10), log(dat1$Control_rep2,10), xlab = "Control Replicate 1", ylab = "Control Replicate2", main = "Comparison of Replicates on Log Scale base 10", pch=19, col = "grey", cex = 0.25)
abline(a=0,b=1, col="red", lty=2)


## Correlation plot

a <- cor(dat1[-c(1:2)])
a

## install.packages(corrplot)
library(corrplot)
corrplot.mixed(a)
corrplot.mixed(a, order = "hclust")

##boxplots

boxplot(dat1[c(3:8)])
boxplot(log(dat1[c(3:8)],10))

##Remove Zeros

dat2 = subset(dat1, dat1$Control_rep1 > 0 & dat1$Control_rep2 > 0 & dat1$Control_rep3 > 0 & dat1$RBP2_rep1 > 0 & dat1$RBP2_rep2 > 0 & dat1$RBP2_rep3 > 0)
boxplot(log(dat2[c(3:8)],10))

## Matrix Manipulation
FPKM_Matrix_1 <- dat1[apply(dat1[-c(1:2)], 1,function(x) all(x>=1)),]
head(FPKM_Matrix_1)

FPKM_Matrix_10 <- dat1[apply(dat1[-c(1:2)], 1,function(x) all(x>=10)),]
head(FPKM_Matrix_10)

FPKM_Matrix_No_Zero <- dat1[apply(dat1[-c(1:2)], 1,function(x) any(x>0)),]
FPKM_Matrix_No_Zero <- dat1[apply(dat1[-c(1:2)], 1,function(x) all(x>0)),]

## Normalization between samples

#install.packages("limma")

library(limma)
FPKM_Matrix_Filt_Norm <- FPKM_Matrix_1
FPKM_Matrix_Filt_Norm[-c(1:2)] <- normalizeBetweenArrays(as.matrix(FPKM_Matrix_1[-c(1:2)]))

boxplot(log(FPKM_Matrix_1[-c(1:2)],10))
boxplot(log(FPKM_Matrix_Filt_Norm[-c(1:2)], 10))

plot(log(FPKM_Matrix_1$Control_rep1, 10), log(FPKM_Matrix_1$Control_rep3,10), xlab = "Control Replicate 1", ylab = "Control Replicate3", main = "Comparison of Replicates on Log Scale base 10, before normalization", pch=19, col = "grey", cex = 0.25)
abline(a=0,b=1, col="red", lty=2)

plot(log(FPKM_Matrix_Filt_Norm$Control_rep1, 10), log(FPKM_Matrix_Filt_Norm$Control_rep3,10), xlab = "Control Replicate 1", ylab = "Control Replicate3", main = "Comparison of Replicates on Log Scale base 10, after normalization", pch=19, col = "grey", cex = 0.25)
abline(a=0,b=1, col="red", lty=2)



##bland altman plots

# install.packages("ggplot2")
# install.packages("BlandAltmanLeh")
library(ggplot2)
library(BlandAltmanLeh)

pl <- bland.altman.plot(log(FPKM_Matrix_Filt_Norm$Control_rep1,10), log(FPKM_Matrix_Filt_Norm$Control_rep3,10), graph.sys="ggplot2", conf.int=.95)
print(pl)

## Volcano plot

FPKM_Matrix_Filt_Norm$ave_control <- rowMeans(FPKM_Matrix_Filt_Norm[c(3:5)])
head(FPKM_Matrix_Filt_Norm)

FPKM_Matrix_Filt_Norm$ave_rbp2 <- rowMeans(FPKM_Matrix_Filt_Norm[c(6:8)])
head(FPKM_Matrix_Filt_Norm)

FPKM_Matrix_Filt_Norm$log2foldchange <- log((FPKM_Matrix_Filt_Norm$ave_rbp2/FPKM_Matrix_Filt_Norm$ave_control),2)
head(FPKM_Matrix_Filt_Norm)


# source("https://bioconductor.org/biocLite.R")
# biocLite("genefilter")


FPKM_Matrix_Filt_Norm2 <- FPKM_Matrix_Filt_Norm[c(3:8)]
FPKM_Matrix_Filt_Norm$pvalue <- apply(FPKM_Matrix_Filt_Norm2,1,function(FPKM_Matrix_Filt_Norm2) {t.test(FPKM_Matrix_Filt_Norm2[c(1:3)],FPKM_Matrix_Filt_Norm2[c(4:6)])$p.value})

head(FPKM_Matrix_Filt_Norm)

FPKM_Matrix_Filt_Norm$padjust <- p.adjust(FPKM_Matrix_Filt_Norm$pvalue, method = "bonferroni", n = length(FPKM_Matrix_Filt_Norm$pvalue))

head(FPKM_Matrix_Filt_Norm)


FPKM_Matrix_Filt_Norm$padjust2 <- p.adjust(FPKM_Matrix_Filt_Norm$pvalue, method = "BH", n = length(FPKM_Matrix_Filt_Norm$pvalue))

head(FPKM_Matrix_Filt_Norm)


FPKM_Matrix_Filt_Norm$log10pvalue <- -log(FPKM_Matrix_Filt_Norm$pvalue,10)
FPKM_Matrix_Filt_Norm$log10padjust <- -log(FPKM_Matrix_Filt_Norm$padjust,10)
FPKM_Matrix_Filt_Norm$log10padjust2 <- -log(FPKM_Matrix_Filt_Norm$padjust2,10)

head(FPKM_Matrix_Filt_Norm)



plot(FPKM_Matrix_Filt_Norm$log2foldchange, FPKM_Matrix_Filt_Norm$log10pvalue, main="Volcano Plot, unadjusted p-values",xlab="Log2 of Fold Change", ylab="-Log 10 of Pvalue", pch=19, cex=0.25, col="grey")

points(FPKM_Matrix_Filt_Norm$log2foldchange[FPKM_Matrix_Filt_Norm$log2foldchange< -1 & FPKM_Matrix_Filt_Norm$log10pvalue >1], FPKM_Matrix_Filt_Norm$log10pvalue[FPKM_Matrix_Filt_Norm$log2foldchange< -1 & FPKM_Matrix_Filt_Norm$log10pvalue >1], col="orange", pch=19, cex=0.25)

points(FPKM_Matrix_Filt_Norm$log2foldchange[FPKM_Matrix_Filt_Norm$log2foldchange > 1 & FPKM_Matrix_Filt_Norm$log10pvalue >1], FPKM_Matrix_Filt_Norm$log10pvalue[FPKM_Matrix_Filt_Norm$log2foldchange > 1 & FPKM_Matrix_Filt_Norm$log10pvalue >1], col="blue", pch=19, cex=0.25)

abline(v=-1, col="black")
abline(v=1, col="black")
abline(h=1, col="red")

## also subset out the top candidates in the following

dat1.1 = subset(FPKM_Matrix_Filt_Norm, FPKM_Matrix_Filt_Norm$log2foldchange > 1 & FPKM_Matrix_Filt_Norm$log10pvalue >1)
dat1.2 = subset(FPKM_Matrix_Filt_Norm, FPKM_Matrix_Filt_Norm$log2foldchange < -1 & FPKM_Matrix_Filt_Norm$log10pvalue >1)

dat1.3 = rbind(dat1.1, dat1.2)

write.csv(dat1.3, "top_candidates_pvalues_unadjusted.csv")




plot(FPKM_Matrix_Filt_Norm$log2foldchange, FPKM_Matrix_Filt_Norm$log10padjust, main="Volcano Plot, Bonferroni adjusted p-values",xlab="Log2 of Fold Change", ylab="-Log 10 of Pvalue", pch=19, cex=0.25, col="grey")

points(FPKM_Matrix_Filt_Norm$log2foldchange[FPKM_Matrix_Filt_Norm$log2foldchange< -1 & FPKM_Matrix_Filt_Norm$log10padjust >1], FPKM_Matrix_Filt_Norm$log10padjust[FPKM_Matrix_Filt_Norm$log2foldchange< -1 & FPKM_Matrix_Filt_Norm$log10padjust >1], col="orange", pch=19, cex=0.25)

points(FPKM_Matrix_Filt_Norm$log2foldchange[FPKM_Matrix_Filt_Norm$log2foldchange > 1 & FPKM_Matrix_Filt_Norm$log10padjust >1], FPKM_Matrix_Filt_Norm$log10padjust[FPKM_Matrix_Filt_Norm$log2foldchange > 1 & FPKM_Matrix_Filt_Norm$log10padjust >1], col="blue", pch=19, cex=0.25)

abline(v=-1, col="black")
abline(v=1, col="black")
abline(h=1, col="red")

## also subset out the top candidates in the following

dat2.1 = subset(FPKM_Matrix_Filt_Norm, FPKM_Matrix_Filt_Norm$log2foldchange > 1 & FPKM_Matrix_Filt_Norm$log10padjust >1)
dat2.2 = subset(FPKM_Matrix_Filt_Norm, FPKM_Matrix_Filt_Norm$log2foldchange < -1 & FPKM_Matrix_Filt_Norm$log10padjust >1)

dat2.3 = rbind(dat2.1, dat2.2)

write.csv(dat2.3, "top_candidates_pvalues_bonferroni.csv")


plot(FPKM_Matrix_Filt_Norm$log2foldchange, FPKM_Matrix_Filt_Norm$log10padjust2, main="Volcano Plot, BH adjusted p-values",xlab="Log2 of Fold Change", ylab="-Log 10 of Pvalue", pch=19, cex=0.25, col="grey")

points(FPKM_Matrix_Filt_Norm$log2foldchange[FPKM_Matrix_Filt_Norm$log2foldchange< -1 & FPKM_Matrix_Filt_Norm$log10padjust2 >1], FPKM_Matrix_Filt_Norm$log10padjust2[FPKM_Matrix_Filt_Norm$log2foldchange< -1 & FPKM_Matrix_Filt_Norm$log10padjust2 >1], col="orange", pch=19, cex=0.25)

points(FPKM_Matrix_Filt_Norm$log2foldchange[FPKM_Matrix_Filt_Norm$log2foldchange > 1 & FPKM_Matrix_Filt_Norm$log10padjust2 >1], FPKM_Matrix_Filt_Norm$log10padjust2[FPKM_Matrix_Filt_Norm$log2foldchange > 1 & FPKM_Matrix_Filt_Norm$log10padjust2 >1], col="blue", pch=19, cex=0.25)

abline(v=-1, col="black")
abline(v=1, col="black")
abline(h=1, col="red")

## also subset out the top candidates in the following

dat3.1 = subset(FPKM_Matrix_Filt_Norm, FPKM_Matrix_Filt_Norm$log2foldchange > 1 & FPKM_Matrix_Filt_Norm$log10padjust2 >1)
dat3.2 = subset(FPKM_Matrix_Filt_Norm, FPKM_Matrix_Filt_Norm$log2foldchange < -1 & FPKM_Matrix_Filt_Norm$log10padjust2 >1)

dat3.3 = rbind(dat3.1, dat3.2)

write.csv(dat3.3, "top_candidates_pvalues_bh.csv")

dim(dat1.3)
dim(dat2.3)
dim(dat3.3)
